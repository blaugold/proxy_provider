name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  formatting-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
      - name: Setup Melos
        run: dart pub global activate melos
      - name: Check format
        run: melos run formatting:check

  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
      - name: Setup Melos
        run: dart pub global activate melos
      - name: Bootstrap packages
        run: melos bs
      - name: Analyze
        run: melos run analyze

  proxy_provider-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
      - name: Setup Melos
        run: dart pub global activate melos
      - name: Bootstrap packages
        run: melos bs --scope runner_dart
      - name: Run tests
        working-directory: packages/proxy_provider
        run: dart test -r expanded

  proxy_provider_flutter-integration_test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Flutter dependencies on Linux
        if: ${{ runner.os == 'Linux' }}
        run:
          sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev
          liblzma-dev
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
      - name: Enable Flutter platforms
        run: |
          flutter config --enable-linux-desktop
          flutter config --enable-macos-desktop
      - name: Setup Melos
        run: dart pub global activate melos
      - name: Ensure Flutter generated files exist
        working-directory: packages/proxy_provider_flutter/example
        run: flutter pub get
      - name: Bootstrap package
        run: melos bs --scope proxy_provider_flutter_example
      - name: Run integration tests
        working-directory: packages/proxy_provider_flutter/example
        shell: bash
        run: |
          case ${{ runner.os }} in
            Linux)
              device=linux
              ;;
            macOS)
              device=macos
              ;;
            Windows)
              device=windows
              ;;
          esac
          flutter test -d $device integration_test/e2e_test.dart
